function generate_population(dir_population, windowing, filtering)
% Fixed settings
dir_outputs = strcat(dir_population, '/Outputs');
save_output = 1; % binary parameter for saving workspace

%% Generate scan pools (filtered) 

temp_folders = dir(dir_population);
num_baseline = 0;
num_tumour = 0;
for i = 1:length(temp_folders)
    scan_dir = [temp_folders(i).folder,'/',temp_folders(i).name];
    if startsWith(temp_folders(i).name, 'Baseline') 
        num_baseline = num_baseline + 1;
        M = read_scan(scan_dir);
        M = bp_filter(M, filtering);
        pool_baseline{num_baseline} = M;
        % pool_baseline_indices{num_baseline} = temp_folders(i).name;
        clear M;
    end
    if startsWith(temp_folders(i).name, 'Tumor') % CAUTION TUMOUR
        num_tumour = num_tumour + 1;
        M = read_scan(scan_dir);
        M = bp_filter(M, filtering);
        pool_tumour{num_tumour} = M;
        % pool_tumour_indices{num_tumour} = temp_folders(i).name;
        clear M;
    end
    clear scan_dir;
end
clear temp_folders i ;

%% Generate scan comparison pools

% pairwise comparisons between baseline scans 
B2B = cell(num_baseline, num_baseline);
for i = 1:num_baseline
    for j = (i+1):num_baseline
        B2B{i,j} = compare_scans(pool_baseline{i}, pool_baseline{j}, windowing); 
    end
end

% % pairwise comparisons between tumour scans 
% T2T = cell(num_tumour, num_tumour);
% for i = 1:num_tumour
%     for j = (i+1):num_tumour
%         T2T{i,j} = compare_scans(pool_tumour{i}, pool_tumour{j}, windowing); 
%     end
% end

% pairwise comparisons between baseline scans and tumour scans 
B2T = cell(num_baseline, num_tumour);
for i = 1:num_baseline
    for j = 1:num_tumour
        B2T{i,j} = compare_scans(pool_baseline{i}, pool_tumour{j}, windowing); 
    end
end

clear i j;

%% Finalization 
fprintf('For the data under %s: \n', dir_population);

fprintf('- Population is generated by %d Baseline and %d Tumour scans \n',num_baseline,num_tumour);

fprintf('- Parameter setting was made as follows: \n');
fprintf('windowing \n');
disp(windowing);
fprintf('filtering \n');
disp(filtering);

if save_output
    mkdir (dir_outputs) % create output folder 
    save(strcat(dir_outputs,'/population')); 
    fprintf('- Workspace is saved under ~/Outputs as population.mat \n');
end
